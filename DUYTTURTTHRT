import React from "react";
import { Formik, Form, Field } from "formik";
import * as Yup from "yup";
const SignupSchema = Yup.object().shape({
  name: Yup.string()
    .min(2, "Too Short!")
    .max(50, "Too Long!")
    .required("Name is required"),
  phoneNumber: Yup.string()
    .required("Phone number is required")
    .matches(
      /^([0]{1}|\+?[234]{3})([7-9]{1})([0|1]{1})([\d]{1})([\d]{7})$/g,
      "Invalid phone number"
    ),
  email: Yup.string().email("Invalid email").required(" Email is Required"),
  password: Yup.string()
    .required("Password is required")
    .min(6, "Password is too short - should be 6 chars minimum"),
    address: Yup.string()
    .min(2, "Too Short!")
    .max(100, "Too Long!")
    .required("Address is required"),
  gender:Yup.string().required("shssjhda")

});

const Index = () => {
  return (
    <div class="container h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-lg-12 col-xl-11">
        <div class="card text-black" >
          <div class="card-body p-md-5">
            <div class="row justify-content-center">
              <div class="col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1">

                <p class="text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4">Sign up</p>
    <div className="">
    <div className="">
      <Formik
        initialValues={{
          name: "",
          phoneNumber: "",
          email: "",
          password: "",
          address:"",
          gender:"",
        }}
        validationSchema={SignupSchema}
        onSubmit={(values) => {
          console.log(values);
        }}
      >
        {({ errors, touched }) => (
          <Form  class="mx-1 mx-md-4" >
            <div class="col-md-6">
            <label  class="form-label">Name</label>
            <Field class="form-control" name="name" />
            {errors.name && touched.name ? (
              <div style={{ color: "red" }}>{errors.name}</div>
            ) : null}
            </div>
            <div class="col-md-6">

            <label  class="form-label">PhoneNumber</label>
            <Field  class="form-control" name="phoneNumber" type="phoneNumber" />
            {errors.phoneNumber && touched.phoneNumber ? (
              <div style={{ color: "red" }}>{errors.phoneNumber}</div>
            ) : null}
            </div>
              <div class="col-md-6">

            <label  class="form-label">Email</label>

            <Field class="form-control" name="email" type="email" />
            {errors.email && touched.email ? (
              <div style={{ color: "red" }}>{errors.email}</div>
            ) : null}
            </div>
            <div class="col-md-6">

            <label  class="form-label">Password</label>
            <Field class="form-control" type="password" name="password" />
            {errors.password && touched.password ? (
              <div style={{ color: "red" }}>{errors.password}</div>
            ) : null}
            </div>
            <div class="col-md-6">

             <label  class="form-label">Address</label>
            <Field class="form-control" type="address" name="address" />
            {errors.address && touched.address ? (
              <div style={{ color: "red" }}>{errors.address}</div>
            ) : null}
            </div>
            <div class="col-auto">
    <label class="form-label" >Gender</label>
    <select name="gender" class="form-select" id="autoSizingSelect">
    {errors.gender && touched.gender ? (
              <div style={{ color: "red" }}>{errors.gender}</div>
            ) : null}
      <option  selected>Choose...</option>
      <option value="1">Male</option>
      <option value="2">Female</option>
      <option value="3">other</option>
    </select>
  </div>
            <div class="col-12">
    <button type="submit" class="btn btn-primary">Sign in</button>
  </div>
             </Form>
          
        )}
        
      </Formik>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
    </div>
  );
};

export default Index;
